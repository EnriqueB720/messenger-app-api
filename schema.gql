# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Contact {
  userId: Float
  contactUserId: Float
  fullName: String
  isFavorite: Boolean
  isBlocked: Boolean
}

type User {
  id: Float
  uuid: String
  email: String
  phoneNumber: Int
  type: Role
  fullName: String
  username: String
  contacts: [Contact!]
}

enum Role {
  USER
  ADMIN
}

type Chat {
  id: Float
  uuid: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  isGroup: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  user(where: UserWhereUniqueInput!): User!
  contact(where: ContactWhereUniqueInput!): Contact!
  chat(where: ChatWhereUniqueInput!): Chat!
}

input UserWhereUniqueInput {
  uuid: String
  username: String
  email: String
}

input ContactWhereUniqueInput {
  userId: Int!
  contactUserId: Int!
}

input ChatWhereUniqueInput {
  id: Int
  uuid: String
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  createContact(data: ContactCreateInput!): Contact!
  createChat(data: ChatCreateInput!): Chat!
}

input UserCreateInput {
  type: Role!
  email: String!
  phoneNumber: Int!
  username: String!
  passwordHash: String!
  fullName: String!
}

input ContactCreateInput {
  firstName: String!
  lastName: String!
  phoneNumber: Int!
  user: UserCreateNestedOneWithoutContactsInput!
}

input UserCreateNestedOneWithoutContactsInput {
  connect: UserWhereUniqueInput!
}

input ChatCreateInput {
  name: String!
  isGroup: Boolean
}